diff --git a/common/autoconf/boot-jdk.m4 b/common/autoconf/boot-jdk.m4
--- a/common/autoconf/boot-jdk.m4
+++ b/common/autoconf/boot-jdk.m4
@@ -305,7 +305,8 @@
   BOOT_JDK_SOURCETARGET="-source 8 -target 8"
   AC_SUBST(BOOT_JDK_SOURCETARGET)
 
-  ADD_JVM_ARG_IF_OK([--patch-module foo=bar], dummy, [$JAVA])
+  #ADD_JVM_ARG_IF_OK([--patch-module foo=bar], dummy, [$JAVA])
+  ADD_JVM_ARG_IF_OK([-Xpatch:foo=bar], dummy, [$JAVA])
   AC_MSG_CHECKING([if Boot JDK supports modules])
   if test "x$JVM_ARG_OK" = "xtrue"; then
     AC_MSG_RESULT([yes])
@@ -526,8 +527,8 @@
     fi
   fi
 
-  JMOD="$BUILD_JDK/bin/jmod"
-  JLINK="$BUILD_JDK/bin/jlink"
+  JMOD="$ORACLE_BOOT_JDK/bin/jmod"
+  JLINK="$ORACLE_BOOT_JDK/bin/jlink"
   AC_SUBST(JMOD)
   AC_SUBST(JLINK)
 
diff --git a/common/autoconf/flags.m4 b/common/autoconf/flags.m4
--- a/common/autoconf/flags.m4
+++ b/common/autoconf/flags.m4
@@ -71,6 +71,19 @@
   CXXFLAGS="$EXTRA_CXXFLAGS"
   LDFLAGS="$EXTRA_LDFLAGS"
   CPPFLAGS=""
+
+  # Check whether --with-j9 was given.
+  BUILD_OPENJ9=false
+  AC_ARG_WITH(j9, [AS_HELP_STRING([--with-j9],
+  [Build J9 VM sources])])
+  if test "x$with-j9" != x; then
+     if ! (test -d $SRC_ROOT/j9vm); then
+       AC_MSG_ERROR(["Cannot locate the path to OpenJ9 sources!"])
+     fi
+     BUILD_OPENJ9=true
+  fi
+
+  AC_SUBST(BUILD_OPENJ9)
 ])
 
 # Setup the sysroot flags and add them to global CFLAGS and LDFLAGS so
@@ -1148,7 +1161,8 @@
     $2JDKLIB_LIBS=""
   else
     $2JAVA_BASE_LDFLAGS="${$2JAVA_BASE_LDFLAGS} \
-        -L\$(SUPPORT_OUTPUTDIR)/modules_libs/java.base\$(OPENJDK_$1_CPU_LIBDIR)"
+        -L\$(SUPPORT_OUTPUTDIR)/modules_libs/java.base\$(OPENJDK_$1_CPU_LIBDIR) \
+        -L\$(BOOT_JDK)/lib/\$(OPENJDK_$1_CPU_LIBDIR)/default"
 
     if test "x$1" = "xTARGET"; then
     # On some platforms (mac) the linker warns about non existing -L dirs.
diff --git a/common/autoconf/source-dirs.m4 b/common/autoconf/source-dirs.m4
--- a/common/autoconf/source-dirs.m4
+++ b/common/autoconf/source-dirs.m4
@@ -74,7 +74,7 @@
     cd "$with_import_hotspot"
     HOTSPOT_DIST="`pwd`"
     cd "$CURDIR"
-    if ! (test -d $HOTSPOT_DIST/lib && test -d $HOTSPOT_DIST/jre/lib); then
+    if ! (test -d $HOTSPOT_DIST/lib); then
       AC_MSG_ERROR([You have to import hotspot from a full jdk image or hotspot build dist dir!])
     fi
     AC_MSG_CHECKING([if hotspot should be imported])
diff --git a/common/autoconf/spec.gmk.in b/common/autoconf/spec.gmk.in
--- a/common/autoconf/spec.gmk.in
+++ b/common/autoconf/spec.gmk.in
@@ -576,7 +576,7 @@
     jdk.jdeps jdk.javadoc jdk.rmic
 ifeq ($(BOOT_JDK_MODULAR), true)
   INTERIM_OVERRIDE_MODULES_ARGS = $(foreach m, $(INTERIM_OVERRIDE_MODULES), \
-      --patch-module $m=$(BUILDTOOLS_OUTPUTDIR)/override_modules/$m)
+      -Xpatch:$m=$(BUILDTOOLS_OUTPUTDIR)/override_modules/$m)
   INTERIM_LANGTOOLS_ARGS = $(INTERIM_OVERRIDE_MODULES_ARGS)
   JAVAC_MAIN_CLASS = -m jdk.compiler/com.sun.tools.javac.Main
   JAVADOC_MAIN_CLASS = -m jdk.javadoc/jdk.javadoc.internal.tool.Main
@@ -604,6 +604,10 @@
   RC_FLAGS:=@RC_FLAGS@
 endif
 
+
+# OpenJ9 build flag
+BUILD_OPENJ9:=@BUILD_OPENJ9@
+
 # Tools adhering to a minimal and common standard of posix compliance.
 AWK:=@AWK@
 BASENAME:=@BASENAME@
diff --git a/make/InterimImage.gmk b/make/InterimImage.gmk
--- a/make/InterimImage.gmk
+++ b/make/InterimImage.gmk
@@ -39,7 +39,7 @@
 JMODS := $(patsubst %, $(IMAGES_OUTPUTDIR)/jmods/%.jmod, $(INTERIM_IMAGE_MODULES))
 
 JLINK_TOOL := $(JLINK) \
-    --module-path $(IMAGES_OUTPUTDIR)/jmods \
+    --modulepath $(IMAGES_OUTPUTDIR)/jmods \
     --endian $(OPENJDK_BUILD_CPU_ENDIAN)
 
 $(INTERIM_IMAGE_DIR)/$(JIMAGE_TARGET_FILE): $(JMODS) \
@@ -48,7 +48,7 @@
 	$(RM) -r $(INTERIM_IMAGE_DIR)
 	$(JLINK_TOOL) \
 	    --output $(INTERIM_IMAGE_DIR) \
-	    --add-modules $(INTERIM_MODULES_LIST)
+	    --addmods $(INTERIM_MODULES_LIST)
 	$(TOUCH) $@
 
 TARGETS += $(INTERIM_IMAGE_DIR)/$(JIMAGE_TARGET_FILE)
diff --git a/make/Main.gmk b/make/Main.gmk
--- a/make/Main.gmk
+++ b/make/Main.gmk
@@ -349,7 +349,7 @@
 zip-docs:
 	+($(CD) $(SRC_ROOT)/make && $(MAKE) $(MAKE_ARGS) -f Javadoc.gmk zip-docs)
 
-ALL_TARGETS += docs-javadoc docs-jvmtidoc zip-docs
+ALL_TARGETS += docs-jvmtidoc zip-docs
 
 ################################################################################
 # Cross compilation support
@@ -384,7 +384,7 @@
 	+($(CD) $(JDK_TOPDIR)/make && $(MAKE) $(MAKE_ARGS) -f GenerateClasslist.gmk)
 endif
 
-ALL_TARGETS += interim-image generate-classlist
+ALL_TARGETS += interim-image
 
 ################################################################################
 # Build tests
@@ -435,8 +435,8 @@
 	     -f BuildFailureHandler.gmk images)
 endif
 
-ALL_TARGETS += prepare-test-image build-test-hotspot-jtreg-native \
-    test-image-hotspot-jtreg-native build-test-jdk-jtreg-native \
+ALL_TARGETS += prepare-test-image\
+    build-test-jdk-jtreg-native \
     test-image-jdk-jtreg-native build-test-lib build-test-failure-handler \
     test-failure-handler test-image-failure-handler test-image-hotspot-gtest
 
@@ -815,11 +815,21 @@
 docs-image: docs-javadoc docs-jvmtidoc
 
 # This target builds the test image
-test-image: prepare-test-image test-image-hotspot-jtreg-native \
-    test-image-jdk-jtreg-native test-image-failure-handler test-image-hotspot-gtest
+test-image: prepare-test-image \
+    test-image-jdk-jtreg-native test-image-failure-handler
+
+################################################################################
+# OpenJ9 target
+
+BUILD_OPENJ9_IMAGE :=
+ifeq ($(BUILD_OPENJ9), true)
+       BUILD_OPENJ9_IMAGE = ($(CD) $(SRC_ROOT)/openj9 && $(MAKE) -f OpenJ9.mk)
+endif
+
+################################################################################
 
 # all-images builds all our deliverables as images.
-all-images: product-images test-image docs-image
+all-images: product-images test-image
 
 # all-bundles packages all our deliverables as tar.gz bundles.
 all-bundles: product-bundles test-bundles docs-bundles
@@ -841,6 +851,8 @@
 docs: docs-image
 bundles: all-bundles
 all: all-images
+	@echo Finished building OpenJDK
+	$(BUILD_OPENJ9_IMAGE)
 
 ALL_TARGETS += default jdk images docs bundles all
 
diff --git a/make/common/Modules.gmk b/make/common/Modules.gmk
--- a/make/common/Modules.gmk
+++ b/make/common/Modules.gmk
@@ -62,7 +62,6 @@
     jdk.net \
     jdk.sctp \
     jdk.unsupported \
-    jdk.vm.ci \
     #
 
 # to be deprivileged
diff --git a/make/common/SetupJavaCompilers.gmk b/make/common/SetupJavaCompilers.gmk
--- a/make/common/SetupJavaCompilers.gmk
+++ b/make/common/SetupJavaCompilers.gmk
@@ -32,7 +32,7 @@
 
 # If warnings needs to be non-fatal for testing purposes use a command like:
 # make JAVAC_WARNINGS="-Xlint:all -Xmaxwarns 10000"
-JAVAC_WARNINGS := -Xlint:all -Werror
+JAVAC_WARNINGS := -Xlint:all
 
 # The BOOT_JAVAC setup uses the boot jdk compiler to compile the tools
 # and the interim javac, to be run by the boot jdk.
